// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/ai/translate/v2/translation_service.proto

package translate // import "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/translate/v2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/yandex-cloud/go-genproto/yandex/cloud/validation"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TranslateRequest_Format int32

const (
	TranslateRequest_FORMAT_UNSPECIFIED TranslateRequest_Format = 0
	// Text without markup. Default value.
	TranslateRequest_PLAIN_TEXT TranslateRequest_Format = 1
	// Text in the HTML format.
	TranslateRequest_HTML TranslateRequest_Format = 2
)

var TranslateRequest_Format_name = map[int32]string{
	0: "FORMAT_UNSPECIFIED",
	1: "PLAIN_TEXT",
	2: "HTML",
}
var TranslateRequest_Format_value = map[string]int32{
	"FORMAT_UNSPECIFIED": 0,
	"PLAIN_TEXT":         1,
	"HTML":               2,
}

func (x TranslateRequest_Format) String() string {
	return proto.EnumName(TranslateRequest_Format_name, int32(x))
}
func (TranslateRequest_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{0, 0}
}

type TranslateRequest struct {
	// The text language to translate from.
	// Specified in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `` ru ``).
	SourceLanguageCode string `protobuf:"bytes,1,opt,name=source_language_code,json=sourceLanguageCode,proto3" json:"source_language_code,omitempty"`
	// The target language to translate the text.
	// Specified in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `` en ``).
	TargetLanguageCode string `protobuf:"bytes,2,opt,name=target_language_code,json=targetLanguageCode,proto3" json:"target_language_code,omitempty"`
	// Format of the text.
	Format TranslateRequest_Format `protobuf:"varint,3,opt,name=format,proto3,enum=yandex.cloud.ai.translate.v2.TranslateRequest_Format" json:"format,omitempty"`
	// Array of the strings to translate.
	// The maximum total length of all strings is 10000 characters.
	Texts []string `protobuf:"bytes,4,rep,name=texts,proto3" json:"texts,omitempty"`
	// ID of the folder to which you have access.
	// This field is used for authorization in the service.
	FolderId             string   `protobuf:"bytes,5,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateRequest) Reset()         { *m = TranslateRequest{} }
func (m *TranslateRequest) String() string { return proto.CompactTextString(m) }
func (*TranslateRequest) ProtoMessage()    {}
func (*TranslateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{0}
}
func (m *TranslateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateRequest.Unmarshal(m, b)
}
func (m *TranslateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateRequest.Marshal(b, m, deterministic)
}
func (dst *TranslateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateRequest.Merge(dst, src)
}
func (m *TranslateRequest) XXX_Size() int {
	return xxx_messageInfo_TranslateRequest.Size(m)
}
func (m *TranslateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateRequest proto.InternalMessageInfo

func (m *TranslateRequest) GetSourceLanguageCode() string {
	if m != nil {
		return m.SourceLanguageCode
	}
	return ""
}

func (m *TranslateRequest) GetTargetLanguageCode() string {
	if m != nil {
		return m.TargetLanguageCode
	}
	return ""
}

func (m *TranslateRequest) GetFormat() TranslateRequest_Format {
	if m != nil {
		return m.Format
	}
	return TranslateRequest_FORMAT_UNSPECIFIED
}

func (m *TranslateRequest) GetTexts() []string {
	if m != nil {
		return m.Texts
	}
	return nil
}

func (m *TranslateRequest) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

type TranslateResponse struct {
	// Array of the translations.
	Translations         []*TranslatedText `protobuf:"bytes,1,rep,name=translations,proto3" json:"translations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TranslateResponse) Reset()         { *m = TranslateResponse{} }
func (m *TranslateResponse) String() string { return proto.CompactTextString(m) }
func (*TranslateResponse) ProtoMessage()    {}
func (*TranslateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{1}
}
func (m *TranslateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateResponse.Unmarshal(m, b)
}
func (m *TranslateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateResponse.Marshal(b, m, deterministic)
}
func (dst *TranslateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateResponse.Merge(dst, src)
}
func (m *TranslateResponse) XXX_Size() int {
	return xxx_messageInfo_TranslateResponse.Size(m)
}
func (m *TranslateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateResponse proto.InternalMessageInfo

func (m *TranslateResponse) GetTranslations() []*TranslatedText {
	if m != nil {
		return m.Translations
	}
	return nil
}

type DetectLanguageRequest struct {
	// The text to detect the language for.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// List of the most likely languages. These languages will be given preference when detecting the text language.
	// Specified in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `` ru ``).
	//
	// To get the list of supported languages, use a [TranslationService.ListLanguages] request.
	LanguageCodeHints []string `protobuf:"bytes,2,rep,name=language_code_hints,json=languageCodeHints,proto3" json:"language_code_hints,omitempty"`
	// ID of the folder to which you have access.
	// This field is used for authorization in the service.
	FolderId             string   `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectLanguageRequest) Reset()         { *m = DetectLanguageRequest{} }
func (m *DetectLanguageRequest) String() string { return proto.CompactTextString(m) }
func (*DetectLanguageRequest) ProtoMessage()    {}
func (*DetectLanguageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{2}
}
func (m *DetectLanguageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectLanguageRequest.Unmarshal(m, b)
}
func (m *DetectLanguageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectLanguageRequest.Marshal(b, m, deterministic)
}
func (dst *DetectLanguageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectLanguageRequest.Merge(dst, src)
}
func (m *DetectLanguageRequest) XXX_Size() int {
	return xxx_messageInfo_DetectLanguageRequest.Size(m)
}
func (m *DetectLanguageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectLanguageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetectLanguageRequest proto.InternalMessageInfo

func (m *DetectLanguageRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DetectLanguageRequest) GetLanguageCodeHints() []string {
	if m != nil {
		return m.LanguageCodeHints
	}
	return nil
}

func (m *DetectLanguageRequest) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

type DetectLanguageResponse struct {
	// The text language in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `` ru ``).
	//
	// To get the language name, use a [TranslationService.ListLanguages] request.
	LanguageCode         string   `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectLanguageResponse) Reset()         { *m = DetectLanguageResponse{} }
func (m *DetectLanguageResponse) String() string { return proto.CompactTextString(m) }
func (*DetectLanguageResponse) ProtoMessage()    {}
func (*DetectLanguageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{3}
}
func (m *DetectLanguageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectLanguageResponse.Unmarshal(m, b)
}
func (m *DetectLanguageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectLanguageResponse.Marshal(b, m, deterministic)
}
func (dst *DetectLanguageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectLanguageResponse.Merge(dst, src)
}
func (m *DetectLanguageResponse) XXX_Size() int {
	return xxx_messageInfo_DetectLanguageResponse.Size(m)
}
func (m *DetectLanguageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectLanguageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetectLanguageResponse proto.InternalMessageInfo

func (m *DetectLanguageResponse) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

type ListLanguagesRequest struct {
	// ID of the folder to which you have access.
	// This field is used for authorization in the service.
	FolderId             string   `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLanguagesRequest) Reset()         { *m = ListLanguagesRequest{} }
func (m *ListLanguagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLanguagesRequest) ProtoMessage()    {}
func (*ListLanguagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{4}
}
func (m *ListLanguagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLanguagesRequest.Unmarshal(m, b)
}
func (m *ListLanguagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLanguagesRequest.Marshal(b, m, deterministic)
}
func (dst *ListLanguagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLanguagesRequest.Merge(dst, src)
}
func (m *ListLanguagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLanguagesRequest.Size(m)
}
func (m *ListLanguagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLanguagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLanguagesRequest proto.InternalMessageInfo

func (m *ListLanguagesRequest) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

type ListLanguagesResponse struct {
	// List of supported languages.
	Languages            []*Language `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListLanguagesResponse) Reset()         { *m = ListLanguagesResponse{} }
func (m *ListLanguagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLanguagesResponse) ProtoMessage()    {}
func (*ListLanguagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_service_a28988e28a7ddfcc, []int{5}
}
func (m *ListLanguagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLanguagesResponse.Unmarshal(m, b)
}
func (m *ListLanguagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLanguagesResponse.Marshal(b, m, deterministic)
}
func (dst *ListLanguagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLanguagesResponse.Merge(dst, src)
}
func (m *ListLanguagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLanguagesResponse.Size(m)
}
func (m *ListLanguagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLanguagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLanguagesResponse proto.InternalMessageInfo

func (m *ListLanguagesResponse) GetLanguages() []*Language {
	if m != nil {
		return m.Languages
	}
	return nil
}

func init() {
	proto.RegisterType((*TranslateRequest)(nil), "yandex.cloud.ai.translate.v2.TranslateRequest")
	proto.RegisterType((*TranslateResponse)(nil), "yandex.cloud.ai.translate.v2.TranslateResponse")
	proto.RegisterType((*DetectLanguageRequest)(nil), "yandex.cloud.ai.translate.v2.DetectLanguageRequest")
	proto.RegisterType((*DetectLanguageResponse)(nil), "yandex.cloud.ai.translate.v2.DetectLanguageResponse")
	proto.RegisterType((*ListLanguagesRequest)(nil), "yandex.cloud.ai.translate.v2.ListLanguagesRequest")
	proto.RegisterType((*ListLanguagesResponse)(nil), "yandex.cloud.ai.translate.v2.ListLanguagesResponse")
	proto.RegisterEnum("yandex.cloud.ai.translate.v2.TranslateRequest_Format", TranslateRequest_Format_name, TranslateRequest_Format_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TranslationServiceClient is the client API for TranslationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TranslationServiceClient interface {
	// Translates the text to the specified language.
	Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error)
	// Detects the language of the text.
	DetectLanguage(ctx context.Context, in *DetectLanguageRequest, opts ...grpc.CallOption) (*DetectLanguageResponse, error)
	// Retrieves the list of supported languages.
	ListLanguages(ctx context.Context, in *ListLanguagesRequest, opts ...grpc.CallOption) (*ListLanguagesResponse, error)
}

type translationServiceClient struct {
	cc *grpc.ClientConn
}

func NewTranslationServiceClient(cc *grpc.ClientConn) TranslationServiceClient {
	return &translationServiceClient{cc}
}

func (c *translationServiceClient) Translate(ctx context.Context, in *TranslateRequest, opts ...grpc.CallOption) (*TranslateResponse, error) {
	out := new(TranslateResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.ai.translate.v2.TranslationService/Translate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationServiceClient) DetectLanguage(ctx context.Context, in *DetectLanguageRequest, opts ...grpc.CallOption) (*DetectLanguageResponse, error) {
	out := new(DetectLanguageResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.ai.translate.v2.TranslationService/DetectLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationServiceClient) ListLanguages(ctx context.Context, in *ListLanguagesRequest, opts ...grpc.CallOption) (*ListLanguagesResponse, error) {
	out := new(ListLanguagesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.ai.translate.v2.TranslationService/ListLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TranslationServiceServer is the server API for TranslationService service.
type TranslationServiceServer interface {
	// Translates the text to the specified language.
	Translate(context.Context, *TranslateRequest) (*TranslateResponse, error)
	// Detects the language of the text.
	DetectLanguage(context.Context, *DetectLanguageRequest) (*DetectLanguageResponse, error)
	// Retrieves the list of supported languages.
	ListLanguages(context.Context, *ListLanguagesRequest) (*ListLanguagesResponse, error)
}

func RegisterTranslationServiceServer(s *grpc.Server, srv TranslationServiceServer) {
	s.RegisterService(&_TranslationService_serviceDesc, srv)
}

func _TranslationService_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServiceServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.ai.translate.v2.TranslationService/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServiceServer).Translate(ctx, req.(*TranslateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslationService_DetectLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectLanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServiceServer).DetectLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.ai.translate.v2.TranslationService/DetectLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServiceServer).DetectLanguage(ctx, req.(*DetectLanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslationService_ListLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLanguagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServiceServer).ListLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.ai.translate.v2.TranslationService/ListLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServiceServer).ListLanguages(ctx, req.(*ListLanguagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TranslationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.ai.translate.v2.TranslationService",
	HandlerType: (*TranslationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Translate",
			Handler:    _TranslationService_Translate_Handler,
		},
		{
			MethodName: "DetectLanguage",
			Handler:    _TranslationService_DetectLanguage_Handler,
		},
		{
			MethodName: "ListLanguages",
			Handler:    _TranslationService_ListLanguages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/ai/translate/v2/translation_service.proto",
}

func init() {
	proto.RegisterFile("yandex/cloud/ai/translate/v2/translation_service.proto", fileDescriptor_translation_service_a28988e28a7ddfcc)
}

var fileDescriptor_translation_service_a28988e28a7ddfcc = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x4f, 0x13, 0x41,
	0x1c, 0x75, 0xdb, 0x52, 0xe9, 0x0f, 0xa8, 0x65, 0x2c, 0x58, 0x9b, 0x1a, 0x9b, 0x35, 0x9a, 0x86,
	0xc8, 0x6e, 0xff, 0x88, 0x89, 0x48, 0x35, 0xfc, 0x0d, 0x35, 0x05, 0xc9, 0xb2, 0x26, 0xc6, 0xc4,
	0x6c, 0x96, 0xee, 0xb0, 0x6c, 0xb2, 0xec, 0xe0, 0xce, 0xb4, 0xc1, 0x2b, 0x47, 0x4e, 0x26, 0x5e,
	0xbd, 0xf9, 0x61, 0xe4, 0xee, 0xd5, 0xa3, 0x26, 0x7e, 0x0c, 0xc3, 0xcc, 0xee, 0xd2, 0x6d, 0x4a,
	0xa5, 0xc7, 0xdd, 0x79, 0x6f, 0xde, 0x9b, 0xf7, 0x7e, 0x33, 0xf0, 0xfc, 0xb3, 0xe9, 0x59, 0xf8,
	0x54, 0xed, 0xb8, 0xa4, 0x6b, 0xa9, 0xa6, 0xa3, 0x32, 0xdf, 0xf4, 0xa8, 0x6b, 0x32, 0xac, 0xf6,
	0xea, 0xd1, 0x87, 0x43, 0x3c, 0x83, 0x62, 0xbf, 0xe7, 0x74, 0xb0, 0x72, 0xe2, 0x13, 0x46, 0x50,
	0x49, 0xf0, 0x14, 0xce, 0x53, 0x4c, 0x47, 0x89, 0x78, 0x4a, 0xaf, 0x5e, 0x2c, 0xd9, 0x84, 0xd8,
	0x2e, 0x56, 0xcd, 0x13, 0x47, 0x35, 0x3d, 0x8f, 0x30, 0xbe, 0x05, 0x15, 0xdc, 0xe2, 0x83, 0x98,
	0x66, 0xcf, 0x74, 0x1d, 0x8b, 0xaf, 0x07, 0xcb, 0xca, 0x4d, 0x2d, 0x09, 0xbc, 0xfc, 0x2b, 0x01,
	0x39, 0x3d, 0x84, 0x68, 0xf8, 0x53, 0x17, 0x53, 0x86, 0x5e, 0x40, 0x9e, 0x92, 0xae, 0xdf, 0xc1,
	0x86, 0x6b, 0x7a, 0x76, 0xd7, 0xb4, 0xb1, 0xd1, 0x21, 0x16, 0x2e, 0x48, 0x65, 0xa9, 0x92, 0x59,
	0xbb, 0x7d, 0x7e, 0x51, 0x4b, 0xae, 0x34, 0x1b, 0x1a, 0x12, 0xa0, 0x76, 0x80, 0x59, 0x27, 0x16,
	0x46, 0x4d, 0xc8, 0x33, 0xd3, 0xb7, 0x31, 0x1b, 0xa0, 0x26, 0x38, 0x75, 0xea, 0xef, 0x8f, 0x9a,
	0x14, 0xd1, 0x05, 0x30, 0x46, 0xdf, 0x81, 0xf4, 0x21, 0xf1, 0x8f, 0x4d, 0x56, 0x48, 0x96, 0xa5,
	0x4a, 0xb6, 0xbe, 0xa4, 0x8c, 0x8a, 0x4a, 0x19, 0x74, 0xae, 0x6c, 0x71, 0xb2, 0x16, 0x6c, 0x82,
	0x4a, 0x30, 0xc1, 0xf0, 0x29, 0xa3, 0x85, 0x54, 0x39, 0x59, 0xc9, 0xac, 0xa5, 0xcf, 0x2e, 0x6a,
	0x89, 0x57, 0x55, 0x4d, 0xfc, 0x44, 0x8f, 0x21, 0x73, 0x48, 0x5c, 0x0b, 0xfb, 0x86, 0x63, 0x15,
	0x26, 0xb8, 0xc1, 0xc9, 0xf3, 0x8b, 0x5a, 0x6a, 0xa5, 0xb9, 0x54, 0xd5, 0x26, 0xc5, 0x52, 0xcb,
	0x92, 0x97, 0x21, 0x2d, 0xb6, 0x45, 0xf3, 0x80, 0xb6, 0xde, 0x6a, 0x3b, 0xab, 0xba, 0xf1, 0x6e,
	0x77, 0x7f, 0x6f, 0x73, 0xbd, 0xb5, 0xd5, 0xda, 0xdc, 0xc8, 0xdd, 0x42, 0x59, 0x80, 0xbd, 0xf6,
	0x6a, 0x6b, 0xd7, 0xd0, 0x37, 0xdf, 0xeb, 0x39, 0x09, 0x4d, 0x42, 0x6a, 0x5b, 0xdf, 0x69, 0xe7,
	0x12, 0x32, 0x86, 0xd9, 0x3e, 0x8f, 0xf4, 0x84, 0x78, 0x14, 0xa3, 0x3d, 0x98, 0xee, 0x2b, 0x82,
	0x16, 0xa4, 0x72, 0xb2, 0x32, 0x55, 0x7f, 0x7a, 0xc3, 0xa3, 0x5a, 0x3a, 0x3e, 0x65, 0x5a, 0x6c,
	0x07, 0xf9, 0xbb, 0x04, 0x73, 0x1b, 0x98, 0xe1, 0x4e, 0x94, 0x66, 0x58, 0xa5, 0x0c, 0xa9, 0xcb,
	0xc3, 0x06, 0xd5, 0x65, 0x83, 0xfc, 0xd3, 0x2b, 0xcd, 0x5a, 0xb5, 0x5a, 0xd5, 0xf8, 0x1a, 0x7a,
	0x0d, 0x77, 0x63, 0x65, 0x19, 0x47, 0x8e, 0xc7, 0x68, 0x21, 0xc1, 0x33, 0xbb, 0x73, 0xc6, 0x13,
	0xa9, 0x55, 0xc3, 0xda, 0x66, 0xdd, 0xbe, 0xc2, 0xb6, 0x2f, 0x91, 0xf1, 0x20, 0x93, 0xd7, 0x06,
	0xd9, 0x84, 0xf9, 0x41, 0x93, 0x41, 0x22, 0x8f, 0x60, 0x66, 0xc8, 0xa4, 0x69, 0xd3, 0xfd, 0x52,
	0x72, 0x13, 0xf2, 0x6d, 0x87, 0x46, 0x64, 0x1a, 0x1e, 0x31, 0xa6, 0x2e, 0x5d, 0xab, 0xfe, 0x11,
	0xe6, 0x06, 0xe8, 0x81, 0xf8, 0x06, 0x64, 0x42, 0x9d, 0xb0, 0x8b, 0x27, 0xa3, 0xbb, 0x88, 0xfc,
	0x5f, 0x11, 0xeb, 0x7f, 0x92, 0x80, 0xf4, 0xab, 0x4e, 0xf6, 0xc5, 0x85, 0x47, 0x5f, 0x24, 0xc8,
	0x44, 0xd5, 0x21, 0x65, 0xbc, 0x71, 0x2e, 0xaa, 0x37, 0xc6, 0x8b, 0xb3, 0xc8, 0xf2, 0xd9, 0xcf,
	0xdf, 0x5f, 0x13, 0x25, 0xf9, 0xde, 0xf0, 0x7b, 0x8f, 0x97, 0xa5, 0x05, 0xf4, 0x4d, 0x82, 0x6c,
	0xbc, 0x07, 0xd4, 0x18, 0xad, 0x33, 0x74, 0xb4, 0x8a, 0xcf, 0xc6, 0x23, 0x05, 0x0e, 0x1f, 0x72,
	0x87, 0xf7, 0xe5, 0x7c, 0xdc, 0xa1, 0xc5, 0xd1, 0x81, 0xbd, 0x99, 0x58, 0x51, 0xa8, 0xfe, 0x9f,
	0x36, 0x86, 0x0c, 0x45, 0xb1, 0x31, 0x16, 0x67, 0x74, 0x7a, 0x51, 0xc9, 0xcb, 0xd2, 0xc2, 0x5a,
	0xfb, 0xc3, 0x1b, 0xdb, 0x61, 0x47, 0xdd, 0x03, 0xa5, 0x43, 0x8e, 0x55, 0x21, 0xb2, 0x28, 0x5e,
	0x5b, 0x9b, 0x2c, 0xda, 0xd8, 0xe3, 0xef, 0xaa, 0x3a, 0xea, 0x19, 0x7e, 0x19, 0x7d, 0x1c, 0xa4,
	0x39, 0xba, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x28, 0x92, 0x9a, 0x4b, 0x4a, 0x06, 0x00, 0x00,
}
