// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/ai/stt/v2/stt_service.proto

package stt // import "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/stt/v2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecognitionSpec_AudioEncoding int32

const (
	RecognitionSpec_AUDIO_ENCODING_UNSPECIFIED RecognitionSpec_AudioEncoding = 0
	// 16-bit signed little-endian (Linear PCM)
	RecognitionSpec_LINEAR16_PCM RecognitionSpec_AudioEncoding = 1
	RecognitionSpec_OGG_OPUS     RecognitionSpec_AudioEncoding = 2
)

var RecognitionSpec_AudioEncoding_name = map[int32]string{
	0: "AUDIO_ENCODING_UNSPECIFIED",
	1: "LINEAR16_PCM",
	2: "OGG_OPUS",
}
var RecognitionSpec_AudioEncoding_value = map[string]int32{
	"AUDIO_ENCODING_UNSPECIFIED": 0,
	"LINEAR16_PCM":               1,
	"OGG_OPUS":                   2,
}

func (x RecognitionSpec_AudioEncoding) String() string {
	return proto.EnumName(RecognitionSpec_AudioEncoding_name, int32(x))
}
func (RecognitionSpec_AudioEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{2, 0}
}

type StreamingRecognitionRequest struct {
	// Types that are valid to be assigned to StreamingRequest:
	//	*StreamingRecognitionRequest_Config
	//	*StreamingRecognitionRequest_AudioContent
	StreamingRequest     isStreamingRecognitionRequest_StreamingRequest `protobuf_oneof:"streaming_request"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *StreamingRecognitionRequest) Reset()         { *m = StreamingRecognitionRequest{} }
func (m *StreamingRecognitionRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionRequest) ProtoMessage()    {}
func (*StreamingRecognitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{0}
}
func (m *StreamingRecognitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionRequest.Unmarshal(m, b)
}
func (m *StreamingRecognitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionRequest.Marshal(b, m, deterministic)
}
func (dst *StreamingRecognitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionRequest.Merge(dst, src)
}
func (m *StreamingRecognitionRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionRequest.Size(m)
}
func (m *StreamingRecognitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionRequest proto.InternalMessageInfo

type isStreamingRecognitionRequest_StreamingRequest interface {
	isStreamingRecognitionRequest_StreamingRequest()
}

type StreamingRecognitionRequest_Config struct {
	Config *RecognitionConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type StreamingRecognitionRequest_AudioContent struct {
	AudioContent []byte `protobuf:"bytes,2,opt,name=audio_content,json=audioContent,proto3,oneof"`
}

func (*StreamingRecognitionRequest_Config) isStreamingRecognitionRequest_StreamingRequest() {}

func (*StreamingRecognitionRequest_AudioContent) isStreamingRecognitionRequest_StreamingRequest() {}

func (m *StreamingRecognitionRequest) GetStreamingRequest() isStreamingRecognitionRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (m *StreamingRecognitionRequest) GetConfig() *RecognitionConfig {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognitionRequest_Config); ok {
		return x.Config
	}
	return nil
}

func (m *StreamingRecognitionRequest) GetAudioContent() []byte {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognitionRequest_AudioContent); ok {
		return x.AudioContent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamingRecognitionRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamingRecognitionRequest_OneofMarshaler, _StreamingRecognitionRequest_OneofUnmarshaler, _StreamingRecognitionRequest_OneofSizer, []interface{}{
		(*StreamingRecognitionRequest_Config)(nil),
		(*StreamingRecognitionRequest_AudioContent)(nil),
	}
}

func _StreamingRecognitionRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamingRecognitionRequest)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingRecognitionRequest_Config:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Config); err != nil {
			return err
		}
	case *StreamingRecognitionRequest_AudioContent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.AudioContent)
	case nil:
	default:
		return fmt.Errorf("StreamingRecognitionRequest.StreamingRequest has unexpected type %T", x)
	}
	return nil
}

func _StreamingRecognitionRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamingRecognitionRequest)
	switch tag {
	case 1: // streaming_request.config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RecognitionConfig)
		err := b.DecodeMessage(msg)
		m.StreamingRequest = &StreamingRecognitionRequest_Config{msg}
		return true, err
	case 2: // streaming_request.audio_content
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.StreamingRequest = &StreamingRecognitionRequest_AudioContent{x}
		return true, err
	default:
		return false, nil
	}
}

func _StreamingRecognitionRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamingRecognitionRequest)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingRecognitionRequest_Config:
		s := proto.Size(x.Config)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamingRecognitionRequest_AudioContent:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.AudioContent)))
		n += len(x.AudioContent)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RecognitionConfig struct {
	Specification        *RecognitionSpec `protobuf:"bytes,1,opt,name=specification,proto3" json:"specification,omitempty"`
	FolderId             string           `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RecognitionConfig) Reset()         { *m = RecognitionConfig{} }
func (m *RecognitionConfig) String() string { return proto.CompactTextString(m) }
func (*RecognitionConfig) ProtoMessage()    {}
func (*RecognitionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{1}
}
func (m *RecognitionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionConfig.Unmarshal(m, b)
}
func (m *RecognitionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionConfig.Marshal(b, m, deterministic)
}
func (dst *RecognitionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionConfig.Merge(dst, src)
}
func (m *RecognitionConfig) XXX_Size() int {
	return xxx_messageInfo_RecognitionConfig.Size(m)
}
func (m *RecognitionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionConfig proto.InternalMessageInfo

func (m *RecognitionConfig) GetSpecification() *RecognitionSpec {
	if m != nil {
		return m.Specification
	}
	return nil
}

func (m *RecognitionConfig) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

type RecognitionSpec struct {
	AudioEncoding RecognitionSpec_AudioEncoding `protobuf:"varint,1,opt,name=audio_encoding,json=audioEncoding,proto3,enum=yandex.cloud.ai.stt.v2.RecognitionSpec_AudioEncoding" json:"audio_encoding,omitempty"`
	// 8000, 16000, 48000 only for pcm
	SampleRateHertz int64 `protobuf:"varint,2,opt,name=sample_rate_hertz,json=sampleRateHertz,proto3" json:"sample_rate_hertz,omitempty"`
	// code in BCP-47
	LanguageCode    string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ProfanityFilter bool   `protobuf:"varint,4,opt,name=profanity_filter,json=profanityFilter,proto3" json:"profanity_filter,omitempty"`
	Model           string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	// If set true, tentative hypotheses may be returned as they become available (final=false flag)
	// If false or omitted, only final=true result(s) are returned.
	PartialResults       bool     `protobuf:"varint,7,opt,name=partial_results,json=partialResults,proto3" json:"partial_results,omitempty"`
	SingleUtterance      bool     `protobuf:"varint,8,opt,name=single_utterance,json=singleUtterance,proto3" json:"single_utterance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecognitionSpec) Reset()         { *m = RecognitionSpec{} }
func (m *RecognitionSpec) String() string { return proto.CompactTextString(m) }
func (*RecognitionSpec) ProtoMessage()    {}
func (*RecognitionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{2}
}
func (m *RecognitionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionSpec.Unmarshal(m, b)
}
func (m *RecognitionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionSpec.Marshal(b, m, deterministic)
}
func (dst *RecognitionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionSpec.Merge(dst, src)
}
func (m *RecognitionSpec) XXX_Size() int {
	return xxx_messageInfo_RecognitionSpec.Size(m)
}
func (m *RecognitionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionSpec proto.InternalMessageInfo

func (m *RecognitionSpec) GetAudioEncoding() RecognitionSpec_AudioEncoding {
	if m != nil {
		return m.AudioEncoding
	}
	return RecognitionSpec_AUDIO_ENCODING_UNSPECIFIED
}

func (m *RecognitionSpec) GetSampleRateHertz() int64 {
	if m != nil {
		return m.SampleRateHertz
	}
	return 0
}

func (m *RecognitionSpec) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *RecognitionSpec) GetProfanityFilter() bool {
	if m != nil {
		return m.ProfanityFilter
	}
	return false
}

func (m *RecognitionSpec) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RecognitionSpec) GetPartialResults() bool {
	if m != nil {
		return m.PartialResults
	}
	return false
}

func (m *RecognitionSpec) GetSingleUtterance() bool {
	if m != nil {
		return m.SingleUtterance
	}
	return false
}

type StreamingRecognitionResponse struct {
	Chunks               []*SpeechRecognitionChunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	EndOfSingleUtterance bool                      `protobuf:"varint,2,opt,name=end_of_single_utterance,json=endOfSingleUtterance,proto3" json:"end_of_single_utterance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StreamingRecognitionResponse) Reset()         { *m = StreamingRecognitionResponse{} }
func (m *StreamingRecognitionResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionResponse) ProtoMessage()    {}
func (*StreamingRecognitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{3}
}
func (m *StreamingRecognitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionResponse.Unmarshal(m, b)
}
func (m *StreamingRecognitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionResponse.Marshal(b, m, deterministic)
}
func (dst *StreamingRecognitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionResponse.Merge(dst, src)
}
func (m *StreamingRecognitionResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionResponse.Size(m)
}
func (m *StreamingRecognitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionResponse proto.InternalMessageInfo

func (m *StreamingRecognitionResponse) GetChunks() []*SpeechRecognitionChunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func (m *StreamingRecognitionResponse) GetEndOfSingleUtterance() bool {
	if m != nil {
		return m.EndOfSingleUtterance
	}
	return false
}

type SpeechRecognitionChunk struct {
	Alternatives         []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	Final                bool                            `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SpeechRecognitionChunk) Reset()         { *m = SpeechRecognitionChunk{} }
func (m *SpeechRecognitionChunk) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionChunk) ProtoMessage()    {}
func (*SpeechRecognitionChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{4}
}
func (m *SpeechRecognitionChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionChunk.Unmarshal(m, b)
}
func (m *SpeechRecognitionChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionChunk.Marshal(b, m, deterministic)
}
func (dst *SpeechRecognitionChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionChunk.Merge(dst, src)
}
func (m *SpeechRecognitionChunk) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionChunk.Size(m)
}
func (m *SpeechRecognitionChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionChunk.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionChunk proto.InternalMessageInfo

func (m *SpeechRecognitionChunk) GetAlternatives() []*SpeechRecognitionAlternative {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *SpeechRecognitionChunk) GetFinal() bool {
	if m != nil {
		return m.Final
	}
	return false
}

type SpeechRecognitionAlternative struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Confidence           float32  `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeechRecognitionAlternative) Reset()         { *m = SpeechRecognitionAlternative{} }
func (m *SpeechRecognitionAlternative) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionAlternative) ProtoMessage()    {}
func (*SpeechRecognitionAlternative) Descriptor() ([]byte, []int) {
	return fileDescriptor_stt_service_2e0ece0966edb486, []int{5}
}
func (m *SpeechRecognitionAlternative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionAlternative.Unmarshal(m, b)
}
func (m *SpeechRecognitionAlternative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionAlternative.Marshal(b, m, deterministic)
}
func (dst *SpeechRecognitionAlternative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionAlternative.Merge(dst, src)
}
func (m *SpeechRecognitionAlternative) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionAlternative.Size(m)
}
func (m *SpeechRecognitionAlternative) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionAlternative.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionAlternative proto.InternalMessageInfo

func (m *SpeechRecognitionAlternative) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SpeechRecognitionAlternative) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func init() {
	proto.RegisterType((*StreamingRecognitionRequest)(nil), "yandex.cloud.ai.stt.v2.StreamingRecognitionRequest")
	proto.RegisterType((*RecognitionConfig)(nil), "yandex.cloud.ai.stt.v2.RecognitionConfig")
	proto.RegisterType((*RecognitionSpec)(nil), "yandex.cloud.ai.stt.v2.RecognitionSpec")
	proto.RegisterType((*StreamingRecognitionResponse)(nil), "yandex.cloud.ai.stt.v2.StreamingRecognitionResponse")
	proto.RegisterType((*SpeechRecognitionChunk)(nil), "yandex.cloud.ai.stt.v2.SpeechRecognitionChunk")
	proto.RegisterType((*SpeechRecognitionAlternative)(nil), "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative")
	proto.RegisterEnum("yandex.cloud.ai.stt.v2.RecognitionSpec_AudioEncoding", RecognitionSpec_AudioEncoding_name, RecognitionSpec_AudioEncoding_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SttServiceClient is the client API for SttService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SttServiceClient interface {
	StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SttService_StreamingRecognizeClient, error)
}

type sttServiceClient struct {
	cc *grpc.ClientConn
}

func NewSttServiceClient(cc *grpc.ClientConn) SttServiceClient {
	return &sttServiceClient{cc}
}

func (c *sttServiceClient) StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SttService_StreamingRecognizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SttService_serviceDesc.Streams[0], "/yandex.cloud.ai.stt.v2.SttService/StreamingRecognize", opts...)
	if err != nil {
		return nil, err
	}
	x := &sttServiceStreamingRecognizeClient{stream}
	return x, nil
}

type SttService_StreamingRecognizeClient interface {
	Send(*StreamingRecognitionRequest) error
	Recv() (*StreamingRecognitionResponse, error)
	grpc.ClientStream
}

type sttServiceStreamingRecognizeClient struct {
	grpc.ClientStream
}

func (x *sttServiceStreamingRecognizeClient) Send(m *StreamingRecognitionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sttServiceStreamingRecognizeClient) Recv() (*StreamingRecognitionResponse, error) {
	m := new(StreamingRecognitionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SttServiceServer is the server API for SttService service.
type SttServiceServer interface {
	StreamingRecognize(SttService_StreamingRecognizeServer) error
}

func RegisterSttServiceServer(s *grpc.Server, srv SttServiceServer) {
	s.RegisterService(&_SttService_serviceDesc, srv)
}

func _SttService_StreamingRecognize_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SttServiceServer).StreamingRecognize(&sttServiceStreamingRecognizeServer{stream})
}

type SttService_StreamingRecognizeServer interface {
	Send(*StreamingRecognitionResponse) error
	Recv() (*StreamingRecognitionRequest, error)
	grpc.ServerStream
}

type sttServiceStreamingRecognizeServer struct {
	grpc.ServerStream
}

func (x *sttServiceStreamingRecognizeServer) Send(m *StreamingRecognitionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sttServiceStreamingRecognizeServer) Recv() (*StreamingRecognitionRequest, error) {
	m := new(StreamingRecognitionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SttService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.ai.stt.v2.SttService",
	HandlerType: (*SttServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamingRecognize",
			Handler:       _SttService_StreamingRecognize_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "yandex/cloud/ai/stt/v2/stt_service.proto",
}

func init() {
	proto.RegisterFile("yandex/cloud/ai/stt/v2/stt_service.proto", fileDescriptor_stt_service_2e0ece0966edb486)
}

var fileDescriptor_stt_service_2e0ece0966edb486 = []byte{
	// 689 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcf, 0x4f, 0xdb, 0x48,
	0x14, 0xc7, 0xe3, 0x04, 0xd8, 0x30, 0x24, 0x24, 0xcc, 0x22, 0xd6, 0x02, 0x84, 0xa2, 0xac, 0x56,
	0x84, 0x95, 0x70, 0x76, 0x03, 0xec, 0x65, 0xa5, 0xd5, 0x86, 0x10, 0x20, 0x52, 0x49, 0xd0, 0x58,
	0x91, 0xaa, 0xaa, 0xd2, 0x68, 0xb0, 0x9f, 0x9d, 0x51, 0x9d, 0x19, 0xd7, 0x1e, 0x47, 0xc0, 0xa5,
	0xa7, 0x4a, 0xfd, 0x03, 0x7a, 0x6d, 0x8f, 0xfd, 0x3b, 0x2b, 0x7b, 0x92, 0x96, 0x1f, 0xa1, 0xa2,
	0x27, 0x7b, 0x3e, 0x9e, 0xef, 0x9b, 0xef, 0x7b, 0x6f, 0xfc, 0x50, 0xe3, 0x86, 0x09, 0x17, 0xae,
	0x9b, 0x4e, 0x20, 0x13, 0xb7, 0xc9, 0x78, 0x33, 0x56, 0xaa, 0x39, 0x69, 0xa5, 0x0f, 0x1a, 0x43,
	0x34, 0xe1, 0x0e, 0x58, 0x61, 0x24, 0x95, 0xc4, 0x1b, 0x7a, 0xa7, 0x95, 0xed, 0xb4, 0x18, 0xb7,
	0x62, 0xa5, 0xac, 0x49, 0xab, 0xfe, 0xd9, 0x40, 0x5b, 0xb6, 0x8a, 0x80, 0x8d, 0xb9, 0xf0, 0x09,
	0x38, 0xd2, 0x17, 0x5c, 0x71, 0x29, 0x08, 0xbc, 0x4d, 0x20, 0x56, 0xb8, 0x83, 0x96, 0x1c, 0x29,
	0x3c, 0xee, 0x9b, 0x46, 0xcd, 0x68, 0xac, 0xb4, 0xf6, 0xac, 0xf9, 0x81, 0xac, 0x3b, 0xda, 0x4e,
	0x26, 0x38, 0xcf, 0x91, 0xa9, 0x14, 0xff, 0x81, 0xca, 0x2c, 0x71, 0xb9, 0xa4, 0x8e, 0x14, 0x0a,
	0x84, 0x32, 0xf3, 0x35, 0xa3, 0x51, 0x3a, 0xcf, 0x91, 0x52, 0x86, 0x3b, 0x9a, 0x1e, 0xff, 0x8a,
	0xd6, 0xe2, 0x99, 0x15, 0x1a, 0x69, 0x03, 0xf5, 0x77, 0x68, 0xed, 0x51, 0x68, 0x7c, 0x81, 0xca,
	0x71, 0x08, 0x0e, 0xf7, 0xb8, 0xc3, 0x52, 0x3c, 0x35, 0xb7, 0xfb, 0x0c, 0x73, 0x76, 0x08, 0x0e,
	0xb9, 0xaf, 0xc6, 0x5b, 0x68, 0xd9, 0x93, 0x81, 0x0b, 0x11, 0xe5, 0x6e, 0xe6, 0x6d, 0x99, 0x14,
	0x35, 0xe8, 0xb9, 0xf5, 0x2f, 0x05, 0x54, 0x79, 0xa0, 0xc7, 0xaf, 0xd1, 0xaa, 0x4e, 0x08, 0x84,
	0x23, 0x5d, 0x2e, 0x74, 0x75, 0x56, 0x5b, 0x47, 0xcf, 0x34, 0x60, 0xb5, 0x53, 0x75, 0x77, 0x2a,
	0x26, 0xba, 0x3a, 0xb3, 0x25, 0xfe, 0x13, 0xad, 0xc5, 0x6c, 0x1c, 0x06, 0x40, 0x23, 0xa6, 0x80,
	0x8e, 0x20, 0x52, 0xb7, 0x99, 0xad, 0x02, 0xa9, 0xe8, 0x0f, 0x84, 0x29, 0x38, 0x4f, 0x31, 0xfe,
	0x1d, 0x95, 0x03, 0x26, 0xfc, 0x84, 0xf9, 0x40, 0x1d, 0xe9, 0x82, 0x59, 0xc8, 0xec, 0x97, 0x66,
	0xb0, 0x23, 0x5d, 0xc0, 0x7b, 0xa8, 0x1a, 0x46, 0xd2, 0x63, 0x82, 0xab, 0x1b, 0xea, 0xf1, 0x40,
	0x41, 0x64, 0x2e, 0xd4, 0x8c, 0x46, 0x91, 0x54, 0xbe, 0xf1, 0xd3, 0x0c, 0xe3, 0x75, 0xb4, 0x38,
	0x96, 0x2e, 0x04, 0xe6, 0x62, 0x16, 0x47, 0x2f, 0xf0, 0x2e, 0xaa, 0x84, 0x2c, 0x52, 0x9c, 0x05,
	0x34, 0x82, 0x38, 0x09, 0x54, 0x6c, 0xfe, 0x92, 0xe9, 0x57, 0xa7, 0x98, 0x68, 0x9a, 0x9e, 0x14,
	0x73, 0xe1, 0x07, 0x40, 0x13, 0xa5, 0x20, 0x62, 0xc2, 0x01, 0xb3, 0xa8, 0x4f, 0xd2, 0x7c, 0x38,
	0xc3, 0xf5, 0x01, 0x2a, 0xdf, 0xab, 0x02, 0xde, 0x41, 0x9b, 0xed, 0xe1, 0x49, 0x6f, 0x40, 0xbb,
	0xfd, 0xce, 0xe0, 0xa4, 0xd7, 0x3f, 0xa3, 0xc3, 0xbe, 0x7d, 0xd9, 0xed, 0xf4, 0x4e, 0x7b, 0xdd,
	0x93, 0x6a, 0x0e, 0x57, 0x51, 0xe9, 0x45, 0xaf, 0xdf, 0x6d, 0x93, 0xbf, 0xff, 0xa1, 0x97, 0x9d,
	0x8b, 0xaa, 0x81, 0x4b, 0xa8, 0x38, 0x38, 0x3b, 0xa3, 0x83, 0xcb, 0xa1, 0x5d, 0xcd, 0xd7, 0x3f,
	0x19, 0x68, 0x7b, 0xfe, 0x55, 0x8e, 0x43, 0x29, 0x62, 0xc0, 0xa7, 0x68, 0xc9, 0x19, 0x25, 0xe2,
	0x4d, 0x6c, 0x1a, 0xb5, 0x42, 0x63, 0xa5, 0x65, 0x3d, 0xd5, 0x2d, 0x3b, 0x04, 0x70, 0x46, 0x77,
	0xaf, 0x5d, 0x2a, 0x23, 0x53, 0x35, 0x3e, 0x42, 0xbf, 0x81, 0x70, 0xa9, 0xf4, 0xe8, 0xa3, 0x5c,
	0xf3, 0x59, 0xae, 0xeb, 0x20, 0xdc, 0x81, 0x67, 0x3f, 0x48, 0xf8, 0x83, 0x81, 0x36, 0xe6, 0x47,
	0xc6, 0x2f, 0x51, 0x89, 0xa5, 0xe5, 0x17, 0x4c, 0xf1, 0x09, 0xcc, 0xfc, 0x1d, 0x3e, 0xdb, 0x5f,
	0xfb, 0xbb, 0x98, 0xdc, 0x8b, 0x94, 0xf6, 0xd3, 0xe3, 0x82, 0x05, 0x53, 0x67, 0x7a, 0x51, 0x27,
	0x68, 0xfb, 0x47, 0x31, 0x30, 0x46, 0x0b, 0x0a, 0xae, 0x55, 0x76, 0xab, 0x97, 0x49, 0xf6, 0x8e,
	0x77, 0x10, 0xca, 0x7e, 0x67, 0x17, 0x66, 0x89, 0xe6, 0xc9, 0x1d, 0xd2, 0xfa, 0x68, 0x20, 0x64,
	0x2b, 0x65, 0xeb, 0xb1, 0x83, 0xdf, 0x1b, 0x08, 0x3f, 0xec, 0xc6, 0x2d, 0xe0, 0x83, 0x27, 0x73,
	0x7a, 0x7a, 0x08, 0x6d, 0x1e, 0xfe, 0x9c, 0x48, 0xb7, 0xbb, 0x9e, 0x6b, 0x18, 0x7f, 0x19, 0xc7,
	0xff, 0xbf, 0xfa, 0xcf, 0xe7, 0x6a, 0x94, 0x5c, 0x59, 0x8e, 0x1c, 0x37, 0x75, 0x9c, 0x7d, 0x3d,
	0x2f, 0x7d, 0xb9, 0xef, 0x83, 0xc8, 0xe6, 0x63, 0x73, 0xfe, 0x20, 0xfd, 0x37, 0x56, 0xea, 0x6a,
	0x29, 0xdb, 0x71, 0xf0, 0x35, 0x00, 0x00, 0xff, 0xff, 0x76, 0x4b, 0xe2, 0xc8, 0x6d, 0x05, 0x00,
	0x00,
}
