// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/mysql/v1alpha/cluster.proto

package mysql // import "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/mysql/v1alpha"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import config "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/mysql/v1alpha/config"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Deployment environment.
type Cluster_Environment int32

const (
	Cluster_ENVIRONMENT_UNSPECIFIED Cluster_Environment = 0
	// Stable environment with concervative update policy.
	Cluster_PRODUCTION Cluster_Environment = 1
	// Environment with more aggressive update policy in comparisson with
	// production environment.
	Cluster_PRESTABLE Cluster_Environment = 2
)

var Cluster_Environment_name = map[int32]string{
	0: "ENVIRONMENT_UNSPECIFIED",
	1: "PRODUCTION",
	2: "PRESTABLE",
}
var Cluster_Environment_value = map[string]int32{
	"ENVIRONMENT_UNSPECIFIED": 0,
	"PRODUCTION":              1,
	"PRESTABLE":               2,
}

func (x Cluster_Environment) String() string {
	return proto.EnumName(Cluster_Environment_name, int32(x))
}
func (Cluster_Environment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{0, 0}
}

type Cluster_Health int32

const (
	Cluster_HEALTH_UNKNOWN Cluster_Health = 0
	Cluster_ALIVE          Cluster_Health = 1
	Cluster_DEAD           Cluster_Health = 2
	Cluster_DEGRADED       Cluster_Health = 3
)

var Cluster_Health_name = map[int32]string{
	0: "HEALTH_UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
	3: "DEGRADED",
}
var Cluster_Health_value = map[string]int32{
	"HEALTH_UNKNOWN": 0,
	"ALIVE":          1,
	"DEAD":           2,
	"DEGRADED":       3,
}

func (x Cluster_Health) String() string {
	return proto.EnumName(Cluster_Health_name, int32(x))
}
func (Cluster_Health) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{0, 1}
}

type Cluster_Status int32

const (
	Cluster_STATUS_UNKNOWN Cluster_Status = 0
	Cluster_CREATING       Cluster_Status = 1
	Cluster_RUNNING        Cluster_Status = 2
	Cluster_ERROR          Cluster_Status = 3
	Cluster_UPDATING       Cluster_Status = 4
	Cluster_STOPPING       Cluster_Status = 5
	Cluster_STOPPED        Cluster_Status = 6
	Cluster_STARTING       Cluster_Status = 7
)

var Cluster_Status_name = map[int32]string{
	0: "STATUS_UNKNOWN",
	1: "CREATING",
	2: "RUNNING",
	3: "ERROR",
	4: "UPDATING",
	5: "STOPPING",
	6: "STOPPED",
	7: "STARTING",
}
var Cluster_Status_value = map[string]int32{
	"STATUS_UNKNOWN": 0,
	"CREATING":       1,
	"RUNNING":        2,
	"ERROR":          3,
	"UPDATING":       4,
	"STOPPING":       5,
	"STOPPED":        6,
	"STARTING":       7,
}

func (x Cluster_Status) String() string {
	return proto.EnumName(Cluster_Status_name, int32(x))
}
func (Cluster_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{0, 2}
}

type Host_Role int32

const (
	Host_ROLE_UNKNOWN Host_Role = 0
	Host_MASTER       Host_Role = 1
	Host_REPLICA      Host_Role = 2
)

var Host_Role_name = map[int32]string{
	0: "ROLE_UNKNOWN",
	1: "MASTER",
	2: "REPLICA",
}
var Host_Role_value = map[string]int32{
	"ROLE_UNKNOWN": 0,
	"MASTER":       1,
	"REPLICA":      2,
}

func (x Host_Role) String() string {
	return proto.EnumName(Host_Role_name, int32(x))
}
func (Host_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{3, 0}
}

type Host_Health int32

const (
	Host_HEALTH_UNKNOWN Host_Health = 0
	Host_ALIVE          Host_Health = 1
	Host_DEAD           Host_Health = 2
	Host_DEGRADED       Host_Health = 3
)

var Host_Health_name = map[int32]string{
	0: "HEALTH_UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
	3: "DEGRADED",
}
var Host_Health_value = map[string]int32{
	"HEALTH_UNKNOWN": 0,
	"ALIVE":          1,
	"DEAD":           2,
	"DEGRADED":       3,
}

func (x Host_Health) String() string {
	return proto.EnumName(Host_Health_name, int32(x))
}
func (Host_Health) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{3, 1}
}

type Service_Type int32

const (
	Service_TYPE_UNSPECIFIED Service_Type = 0
	Service_MYSQL_ERROR      Service_Type = 1
	Service_MYSQL_GENERAL    Service_Type = 2
	Service_MYSQL_SLOW_QUERY Service_Type = 3
)

var Service_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "MYSQL_ERROR",
	2: "MYSQL_GENERAL",
	3: "MYSQL_SLOW_QUERY",
}
var Service_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"MYSQL_ERROR":      1,
	"MYSQL_GENERAL":    2,
	"MYSQL_SLOW_QUERY": 3,
}

func (x Service_Type) String() string {
	return proto.EnumName(Service_Type_name, int32(x))
}
func (Service_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{4, 0}
}

type Service_Health int32

const (
	Service_HEALTH_UNKNOWN Service_Health = 0
	Service_ALIVE          Service_Health = 1
	Service_DEAD           Service_Health = 2
)

var Service_Health_name = map[int32]string{
	0: "HEALTH_UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
}
var Service_Health_value = map[string]int32{
	"HEALTH_UNKNOWN": 0,
	"ALIVE":          1,
	"DEAD":           2,
}

func (x Service_Health) String() string {
	return proto.EnumName(Service_Health_name, int32(x))
}
func (Service_Health) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{4, 1}
}

// MySQL cluster.
type Cluster struct {
	// Required. Unique ID of the MySQL cluster.
	// This ID is assigned by MDB in the process of creating a MySQL cluster.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the MySQL cluster belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The time when the MySQL cluster was created.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the MySQL cluster. The value is unique within the folder,
	// 1-63 characters long, and comply with RFC1035.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the MySQL cluster. 0-256 characters long.
	Description string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Deployment environment of the MySQL cluster.
	Environment Cluster_Environment `protobuf:"varint,7,opt,name=environment,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Cluster_Environment" json:"environment,omitempty"`
	// Monitoring systems relevant to the MySQL cluster.
	Monitoring []*Monitoring `protobuf:"bytes,8,rep,name=monitoring,proto3" json:"monitoring,omitempty"`
	// Configuration of the MySQL cluster.
	Config    *ClusterConfig `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	NetworkId string         `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Aggregated cluster health
	Health Cluster_Health `protobuf:"varint,11,opt,name=health,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Cluster_Health" json:"health,omitempty"`
	// Cluster status
	Status               Cluster_Status `protobuf:"varint,12,opt,name=status,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Cluster_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{0}
}
func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (dst *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(dst, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cluster) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Cluster) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetEnvironment() Cluster_Environment {
	if m != nil {
		return m.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (m *Cluster) GetMonitoring() []*Monitoring {
	if m != nil {
		return m.Monitoring
	}
	return nil
}

func (m *Cluster) GetConfig() *ClusterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Cluster) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *Cluster) GetHealth() Cluster_Health {
	if m != nil {
		return m.Health
	}
	return Cluster_HEALTH_UNKNOWN
}

func (m *Cluster) GetStatus() Cluster_Status {
	if m != nil {
		return m.Status
	}
	return Cluster_STATUS_UNKNOWN
}

// Monitoring system.
type Monitoring struct {
	// Name of the monitoring system.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the monitoring system.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Link to the monitoring system.
	Link                 string   `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Monitoring) Reset()         { *m = Monitoring{} }
func (m *Monitoring) String() string { return proto.CompactTextString(m) }
func (*Monitoring) ProtoMessage()    {}
func (*Monitoring) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{1}
}
func (m *Monitoring) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Monitoring.Unmarshal(m, b)
}
func (m *Monitoring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Monitoring.Marshal(b, m, deterministic)
}
func (dst *Monitoring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Monitoring.Merge(dst, src)
}
func (m *Monitoring) XXX_Size() int {
	return xxx_messageInfo_Monitoring.Size(m)
}
func (m *Monitoring) XXX_DiscardUnknown() {
	xxx_messageInfo_Monitoring.DiscardUnknown(m)
}

var xxx_messageInfo_Monitoring proto.InternalMessageInfo

func (m *Monitoring) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Monitoring) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Monitoring) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type ClusterConfig struct {
	// Version of MySQL DBMS.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Configuration settings of MySQL DBMS.
	//
	// Types that are valid to be assigned to MysqlConfig:
	//	*ClusterConfig_MysqlConfig_5_7
	MysqlConfig isClusterConfig_MysqlConfig `protobuf_oneof:"mysql_config"`
	// Resources allocated to MySQL hosts.
	Resources            *Resources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClusterConfig) Reset()         { *m = ClusterConfig{} }
func (m *ClusterConfig) String() string { return proto.CompactTextString(m) }
func (*ClusterConfig) ProtoMessage()    {}
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{2}
}
func (m *ClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterConfig.Unmarshal(m, b)
}
func (m *ClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterConfig.Marshal(b, m, deterministic)
}
func (dst *ClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterConfig.Merge(dst, src)
}
func (m *ClusterConfig) XXX_Size() int {
	return xxx_messageInfo_ClusterConfig.Size(m)
}
func (m *ClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterConfig proto.InternalMessageInfo

func (m *ClusterConfig) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type isClusterConfig_MysqlConfig interface {
	isClusterConfig_MysqlConfig()
}

type ClusterConfig_MysqlConfig_5_7 struct {
	MysqlConfig_5_7 *config.MysqlConfigSet5_7 `protobuf:"bytes,2,opt,name=mysql_config_5_7,json=mysqlConfig57,proto3,oneof"`
}

func (*ClusterConfig_MysqlConfig_5_7) isClusterConfig_MysqlConfig() {}

func (m *ClusterConfig) GetMysqlConfig() isClusterConfig_MysqlConfig {
	if m != nil {
		return m.MysqlConfig
	}
	return nil
}

func (m *ClusterConfig) GetMysqlConfig_5_7() *config.MysqlConfigSet5_7 {
	if x, ok := m.GetMysqlConfig().(*ClusterConfig_MysqlConfig_5_7); ok {
		return x.MysqlConfig_5_7
	}
	return nil
}

func (m *ClusterConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClusterConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClusterConfig_OneofMarshaler, _ClusterConfig_OneofUnmarshaler, _ClusterConfig_OneofSizer, []interface{}{
		(*ClusterConfig_MysqlConfig_5_7)(nil),
	}
}

func _ClusterConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClusterConfig)
	// mysql_config
	switch x := m.MysqlConfig.(type) {
	case *ClusterConfig_MysqlConfig_5_7:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MysqlConfig_5_7); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClusterConfig.MysqlConfig has unexpected type %T", x)
	}
	return nil
}

func _ClusterConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClusterConfig)
	switch tag {
	case 2: // mysql_config.mysql_config_5_7
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(config.MysqlConfigSet5_7)
		err := b.DecodeMessage(msg)
		m.MysqlConfig = &ClusterConfig_MysqlConfig_5_7{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClusterConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClusterConfig)
	// mysql_config
	switch x := m.MysqlConfig.(type) {
	case *ClusterConfig_MysqlConfig_5_7:
		s := proto.Size(x.MysqlConfig_5_7)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Host struct {
	// Required. Name of the host.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. ID of the MySQL cluster.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the availability zone.
	ZoneId string `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Resources allocated to the host.
	Resources *Resources `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	// Host's role
	Role Host_Role `protobuf:"varint,5,opt,name=role,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Host_Role" json:"role,omitempty"`
	// Aggregated host health
	Health Host_Health `protobuf:"varint,6,opt,name=health,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Host_Health" json:"health,omitempty"`
	// Host services
	Services             []*Service `protobuf:"bytes,7,rep,name=services,proto3" json:"services,omitempty"`
	SubnetId             string     `protobuf:"bytes,8,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{3}
}
func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (dst *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(dst, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Host) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *Host) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *Host) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Host) GetRole() Host_Role {
	if m != nil {
		return m.Role
	}
	return Host_ROLE_UNKNOWN
}

func (m *Host) GetHealth() Host_Health {
	if m != nil {
		return m.Health
	}
	return Host_HEALTH_UNKNOWN
}

func (m *Host) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Host) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

type Service struct {
	// Type of service
	Type Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Service_Type" json:"type,omitempty"`
	// Service health
	Health               Service_Health `protobuf:"varint,2,opt,name=health,proto3,enum=yandex.cloud.mdb.mysql.v1alpha.Service_Health" json:"health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{4}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetType() Service_Type {
	if m != nil {
		return m.Type
	}
	return Service_TYPE_UNSPECIFIED
}

func (m *Service) GetHealth() Service_Health {
	if m != nil {
		return m.Health
	}
	return Service_HEALTH_UNKNOWN
}

type Resources struct {
	ResourcePresetId string `protobuf:"bytes,1,opt,name=resource_preset_id,json=resourcePresetId,proto3" json:"resource_preset_id,omitempty"`
	// Volume of the storage available to a host.
	DiskSize             int64    `protobuf:"varint,2,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	DiskTypeId           string   `protobuf:"bytes,3,opt,name=disk_type_id,json=diskTypeId,proto3" json:"disk_type_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_216aad02e306f200, []int{5}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetResourcePresetId() string {
	if m != nil {
		return m.ResourcePresetId
	}
	return ""
}

func (m *Resources) GetDiskSize() int64 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *Resources) GetDiskTypeId() string {
	if m != nil {
		return m.DiskTypeId
	}
	return ""
}

func init() {
	proto.RegisterType((*Cluster)(nil), "yandex.cloud.mdb.mysql.v1alpha.Cluster")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.mdb.mysql.v1alpha.Cluster.LabelsEntry")
	proto.RegisterType((*Monitoring)(nil), "yandex.cloud.mdb.mysql.v1alpha.Monitoring")
	proto.RegisterType((*ClusterConfig)(nil), "yandex.cloud.mdb.mysql.v1alpha.ClusterConfig")
	proto.RegisterType((*Host)(nil), "yandex.cloud.mdb.mysql.v1alpha.Host")
	proto.RegisterType((*Service)(nil), "yandex.cloud.mdb.mysql.v1alpha.Service")
	proto.RegisterType((*Resources)(nil), "yandex.cloud.mdb.mysql.v1alpha.Resources")
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Cluster_Environment", Cluster_Environment_name, Cluster_Environment_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Cluster_Health", Cluster_Health_name, Cluster_Health_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Cluster_Status", Cluster_Status_name, Cluster_Status_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Host_Role", Host_Role_name, Host_Role_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Host_Health", Host_Health_name, Host_Health_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Service_Type", Service_Type_name, Service_Type_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1alpha.Service_Health", Service_Health_name, Service_Health_value)
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/mysql/v1alpha/cluster.proto", fileDescriptor_cluster_216aad02e306f200)
}

var fileDescriptor_cluster_216aad02e306f200 = []byte{
	// 1053 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x72, 0xda, 0xc6,
	0x17, 0x0f, 0x1f, 0x16, 0xe8, 0x80, 0xf9, 0xeb, 0xbf, 0x93, 0x99, 0x68, 0x9c, 0x49, 0xeb, 0xd1,
	0x4d, 0xdd, 0xd6, 0x16, 0x63, 0xa7, 0x1e, 0x27, 0xed, 0x74, 0x5a, 0x19, 0x36, 0x46, 0x09, 0x16,
	0x64, 0x25, 0x9c, 0x71, 0x6f, 0x34, 0x02, 0xad, 0xb1, 0xc6, 0x42, 0xa2, 0x92, 0x70, 0x83, 0x1f,
	0xa6, 0xaf, 0xd4, 0xc7, 0xe8, 0x13, 0xf4, 0xbe, 0xb3, 0xbb, 0xc2, 0xe0, 0xb4, 0x0d, 0xa4, 0xd3,
	0x3b, 0x9d, 0xb3, 0xe7, 0xf7, 0xdb, 0xf3, 0xad, 0x85, 0xfd, 0xb9, 0x17, 0xf9, 0xf4, 0x7d, 0x73,
	0x14, 0xc6, 0x33, 0xbf, 0x39, 0xf1, 0x87, 0xcd, 0xc9, 0x3c, 0xfd, 0x39, 0x6c, 0xde, 0x1e, 0x7a,
	0xe1, 0xf4, 0xda, 0x6b, 0x8e, 0xc2, 0x59, 0x9a, 0xd1, 0x44, 0x9f, 0x26, 0x71, 0x16, 0xa3, 0xcf,
	0x84, 0xb5, 0xce, 0xad, 0xf5, 0x89, 0x3f, 0xd4, 0xb9, 0xb5, 0x9e, 0x5b, 0xef, 0x7c, 0x3e, 0x8e,
	0xe3, 0x71, 0x48, 0x9b, 0xdc, 0x7a, 0x38, 0xbb, 0x6a, 0x66, 0xc1, 0x84, 0xa6, 0x99, 0x37, 0x99,
	0x0a, 0x82, 0x9d, 0x6f, 0xd6, 0x5d, 0x17, 0x47, 0x57, 0xc1, 0x58, 0x28, 0x8f, 0xdd, 0x13, 0x81,
	0xd2, 0x7e, 0xab, 0x40, 0xa5, 0x25, 0x1c, 0x41, 0x0d, 0x28, 0x06, 0xbe, 0x5a, 0xd8, 0x2d, 0xec,
	0xc9, 0xa4, 0x18, 0xf8, 0xe8, 0x29, 0xc8, 0x57, 0x71, 0xe8, 0xd3, 0xc4, 0x0d, 0x7c, 0xb5, 0xc8,
	0xd5, 0x55, 0xa1, 0x30, 0x7d, 0xf4, 0x12, 0x60, 0x94, 0x50, 0x2f, 0xa3, 0xbe, 0xeb, 0x65, 0x6a,
	0x69, 0xb7, 0xb0, 0x57, 0x3b, 0xda, 0xd1, 0x85, 0x93, 0xfa, 0xc2, 0x49, 0xdd, 0x59, 0x38, 0x49,
	0xe4, 0xdc, 0xda, 0xc8, 0x10, 0x82, 0x72, 0xe4, 0x4d, 0xa8, 0x5a, 0xe6, 0x94, 0xfc, 0x1b, 0xed,
	0x42, 0xcd, 0xa7, 0xe9, 0x28, 0x09, 0xa6, 0x59, 0x10, 0x47, 0xea, 0x16, 0x3f, 0x5a, 0x55, 0xa1,
	0x37, 0x20, 0x85, 0xde, 0x90, 0x86, 0xa9, 0x2a, 0xed, 0x96, 0xf6, 0x6a, 0x47, 0xcf, 0xf5, 0x8f,
	0x67, 0x4c, 0xcf, 0xc3, 0xd2, 0xbb, 0x1c, 0x85, 0xa3, 0x2c, 0x99, 0x93, 0x9c, 0x02, 0x0d, 0xa0,
	0x46, 0xa3, 0xdb, 0x20, 0x89, 0xa3, 0x09, 0x8d, 0x32, 0xb5, 0xb2, 0x5b, 0xd8, 0x6b, 0x6c, 0xce,
	0x88, 0x97, 0x50, 0xb2, 0xca, 0x83, 0x5e, 0x03, 0x4c, 0xe2, 0x28, 0xc8, 0xe2, 0x24, 0x88, 0xc6,
	0x6a, 0x95, 0xfb, 0xf9, 0xd5, 0x3a, 0xd6, 0xf3, 0x7b, 0x04, 0x59, 0x41, 0x23, 0x0c, 0x92, 0x28,
	0x99, 0x2a, 0xf3, 0xe4, 0x1e, 0x6c, 0xe8, 0x5d, 0x8b, 0x83, 0x48, 0x0e, 0x46, 0xcf, 0x00, 0x22,
	0x9a, 0xfd, 0x12, 0x27, 0x37, 0xac, 0x8a, 0xc0, 0xf3, 0x2a, 0xe7, 0x1a, 0xd3, 0x47, 0xaf, 0x40,
	0xba, 0xa6, 0x5e, 0x98, 0x5d, 0xab, 0x35, 0x9e, 0x03, 0x7d, 0xd3, 0x1c, 0x74, 0x38, 0x8a, 0xe4,
	0x68, 0xc6, 0x93, 0x66, 0x5e, 0x36, 0x4b, 0xd5, 0xfa, 0xa7, 0xf1, 0xd8, 0x1c, 0x45, 0x72, 0xf4,
	0xce, 0x4b, 0xa8, 0xad, 0xd4, 0x0b, 0x29, 0x50, 0xba, 0xa1, 0xf3, 0xbc, 0x27, 0xd9, 0x27, 0x7a,
	0x0c, 0x5b, 0xb7, 0x5e, 0x38, 0xa3, 0x79, 0x43, 0x0a, 0xe1, 0xdb, 0xe2, 0x8b, 0x82, 0x66, 0x42,
	0x6d, 0xa5, 0x30, 0xe8, 0x29, 0x3c, 0xc1, 0xd6, 0x85, 0x49, 0x7a, 0xd6, 0x39, 0xb6, 0x1c, 0x77,
	0x60, 0xd9, 0x7d, 0xdc, 0x32, 0x5f, 0x99, 0xb8, 0xad, 0x3c, 0x42, 0x0d, 0x80, 0x3e, 0xe9, 0xb5,
	0x07, 0x2d, 0xc7, 0xec, 0x59, 0x4a, 0x01, 0x6d, 0x83, 0xdc, 0x27, 0xd8, 0x76, 0x8c, 0xd3, 0x2e,
	0x56, 0x8a, 0xda, 0x0f, 0x20, 0x89, 0xf8, 0x10, 0x82, 0x46, 0x07, 0x1b, 0x5d, 0xa7, 0xe3, 0x0e,
	0xac, 0x37, 0x56, 0xef, 0x9d, 0xa5, 0x3c, 0x42, 0x32, 0x6c, 0x19, 0x5d, 0xf3, 0x02, 0x2b, 0x05,
	0x54, 0x85, 0x72, 0x1b, 0x1b, 0x6d, 0xa5, 0x88, 0xea, 0x50, 0x6d, 0xe3, 0x33, 0x62, 0xb4, 0x71,
	0x5b, 0x29, 0x69, 0x73, 0x90, 0x44, 0x60, 0x8c, 0xc0, 0x76, 0x0c, 0x67, 0x60, 0xaf, 0x10, 0xd4,
	0xa1, 0xda, 0x22, 0xd8, 0x70, 0x4c, 0xeb, 0x4c, 0x29, 0xa0, 0x1a, 0x54, 0xc8, 0xc0, 0xb2, 0x98,
	0x50, 0x64, 0xdc, 0x98, 0x90, 0x1e, 0x51, 0x4a, 0xcc, 0x6a, 0xd0, 0x6f, 0x0b, 0xab, 0x32, 0x93,
	0x6c, 0xa7, 0xd7, 0xef, 0x33, 0x69, 0x8b, 0x61, 0xb8, 0x84, 0xdb, 0x8a, 0x24, 0x8e, 0x0c, 0xc2,
	0x0d, 0x2b, 0xda, 0x05, 0xc0, 0xb2, 0xa3, 0xee, 0x67, 0xad, 0xf0, 0xcf, 0xb3, 0x56, 0xfc, 0xeb,
	0xac, 0x21, 0x28, 0x87, 0x41, 0x74, 0xc3, 0xc7, 0x5a, 0x26, 0xfc, 0x5b, 0xfb, 0xbd, 0x00, 0xdb,
	0x0f, 0x5a, 0x0c, 0xa9, 0x50, 0xb9, 0xa5, 0x49, 0xca, 0x38, 0x04, 0xfd, 0x42, 0x44, 0x23, 0x50,
	0x78, 0xb5, 0x5d, 0xd1, 0x84, 0xee, 0xb1, 0x7b, 0xc2, 0xaf, 0xa9, 0x1d, 0xbd, 0x58, 0xd7, 0x17,
	0x02, 0xa1, 0x9f, 0x33, 0xa5, 0xb8, 0xc7, 0xa6, 0xd9, 0xb1, 0x7b, 0xd2, 0x79, 0x44, 0xb6, 0x27,
	0x4b, 0xe5, 0xf1, 0x09, 0x3a, 0x03, 0x39, 0xa1, 0x69, 0x3c, 0x4b, 0x46, 0x34, 0xcd, 0x17, 0xd0,
	0x97, 0xeb, 0xd8, 0xc9, 0x02, 0x40, 0x96, 0xd8, 0xd3, 0x06, 0xd4, 0x57, 0xbd, 0xd5, 0xfe, 0x28,
	0x41, 0xb9, 0x13, 0xa7, 0xd9, 0xdf, 0x26, 0xef, 0x19, 0x40, 0xbe, 0xb8, 0x97, 0x5b, 0x51, 0xce,
	0x35, 0xa6, 0x8f, 0x9e, 0x40, 0xe5, 0x2e, 0x8e, 0x28, 0x3b, 0x13, 0xc9, 0x93, 0x98, 0x68, 0xfa,
	0x0f, 0xbd, 0x2d, 0xff, 0x7b, 0x6f, 0xd1, 0xf7, 0x50, 0x4e, 0xe2, 0x90, 0xf2, 0x15, 0xd9, 0x58,
	0xcf, 0xc1, 0x02, 0xd1, 0x49, 0x1c, 0x52, 0xc2, 0x61, 0xa8, 0x75, 0x3f, 0xf0, 0x12, 0x27, 0xf8,
	0x7a, 0x23, 0x82, 0x0f, 0xa6, 0xbd, 0x05, 0xd5, 0x94, 0x26, 0xb7, 0x01, 0x8b, 0xa5, 0xc2, 0xb7,
	0xdc, 0x17, 0xeb, 0x68, 0x6c, 0x61, 0x4f, 0xee, 0x81, 0xec, 0xf7, 0x92, 0xce, 0x86, 0x11, 0xcd,
	0x58, 0xb2, 0xaa, 0xe2, 0xf7, 0x22, 0x14, 0xa6, 0xaf, 0x1d, 0x42, 0x99, 0x39, 0x8d, 0x14, 0xa8,
	0x93, 0x5e, 0x17, 0xaf, 0x0c, 0x0f, 0x80, 0x74, 0x6e, 0xd8, 0x0e, 0x26, 0xf9, 0xe8, 0xe0, 0x7e,
	0xd7, 0x6c, 0x19, 0xff, 0xc5, 0xd0, 0xfe, 0x5a, 0x84, 0x4a, 0xee, 0x26, 0xfa, 0x11, 0xca, 0xd9,
	0x7c, 0x2a, 0x4a, 0xdf, 0x38, 0xda, 0xdf, 0x30, 0x3a, 0xdd, 0x99, 0x4f, 0x29, 0xe1, 0xc8, 0x95,
	0xcd, 0x5a, 0xdc, 0x6c, 0x23, 0x2e, 0x38, 0x1e, 0xe6, 0x5a, 0xbb, 0x80, 0x32, 0x63, 0x45, 0x8f,
	0x41, 0x71, 0x2e, 0xfb, 0xf8, 0x83, 0x45, 0xf6, 0x3f, 0xa8, 0x9d, 0x5f, 0xda, 0x6f, 0xbb, 0xae,
	0xd8, 0x1a, 0x05, 0xf4, 0x7f, 0xd8, 0x16, 0x8a, 0x33, 0x6c, 0x61, 0x62, 0x74, 0x95, 0x22, 0x43,
	0x0a, 0x95, 0xdd, 0xed, 0xbd, 0x73, 0xdf, 0x0e, 0x30, 0xb9, 0x54, 0x4a, 0xda, 0xe1, 0x27, 0xa7,
	0x4b, 0x7b, 0x0f, 0xf2, 0x7d, 0x4b, 0xa2, 0x7d, 0x40, 0x8b, 0xa6, 0x74, 0xa7, 0x09, 0x4d, 0x45,
	0x1d, 0xc5, 0xa8, 0x28, 0x8b, 0x93, 0x3e, 0x3f, 0x30, 0xf9, 0x5b, 0xc2, 0x0f, 0xd2, 0x1b, 0x37,
	0x0d, 0xee, 0xc4, 0xea, 0x2e, 0x91, 0x2a, 0x53, 0xd8, 0xc1, 0x1d, 0x5b, 0x48, 0x75, 0x7e, 0xc8,
	0xf2, 0xb6, 0x9c, 0x1c, 0x60, 0x3a, 0x16, 0xba, 0xe9, 0x9f, 0xbe, 0xfe, 0xa9, 0x33, 0x0e, 0xb2,
	0xeb, 0xd9, 0x50, 0x1f, 0xc5, 0x93, 0xa6, 0x48, 0xe4, 0x81, 0x78, 0xe9, 0x8c, 0xe3, 0x83, 0x31,
	0x8d, 0xf8, 0x8b, 0xa3, 0xf9, 0xf1, 0x27, 0xd0, 0x77, 0x5c, 0x1a, 0x4a, 0xdc, 0xf6, 0xf9, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xa4, 0x2c, 0xf5, 0xa0, 0x09, 0x00, 0x00,
}
